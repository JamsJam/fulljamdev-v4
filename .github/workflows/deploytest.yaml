name: deploy-test

on:
  push:
    branches: ["test"]


jobs:
  build:
    name: deploy-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: G√©n√©rer un sous-domaine temporaire
        id: hash
        run: |
          set -e
          HASH=$(head /dev/urandom | tr -dc a-z0-9 | head -c 10)
          echo "hash=$HASH" >> "$GITHUB_OUTPUT"

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.APP_SERVER }}
          username: ${{ secrets.APP_USER }}
          password: ${{ secrets.APP_PASS }}
          port: ${{ secrets.APP_PORT }}
          script: |
            set -e
            echo
            echo "============================"
            echo "[ Creation du dossier ]"
            echo "============================"
            echo
            mkdir -p /var/www/${{ secrets.APP_USER }}/test.${{ secrets.APP_DOMAIN }}/${{ steps.hash.outputs.hash }}
            echo
            echo "============================"
            echo "[ Ouverture du dossier ]"
            echo "============================"
            echo
            cd /var/www/${{ secrets.APP_USER }}/test.${{ secrets.APP_DOMAIN }}/${{ steps.hash.outputs.hash }}
            echo
            echo "============================"
            echo "[ mise a jour du dossier ]"
            echo "============================"
            echo
            git clone --depth 1 --branch test https://github.com/${{ github.repository }} .
            echo
            echo "============================"
            echo "[ creation du .env ]"
            echo "============================"
            echo
            cat <<EOF > .env.local
            APP_ENV=prod
            APP_DEBUG=0
            DATABASE_URL=${{ secrets.DATABASE_TEST_URL }}
            APP_SECRET=${{ secrets.APP_TEST_SECRET }}
            MESSENGER_TRANSPORT_DSN=${{ secrets.MAILER_TEST_DSN }}
            MAILER_DSN=${{ secrets.MESSENGER_TEST_TRANSPORT_DSN }}
            EOF
            echo
            echo "============================"
            echo "[ dependency installation ]"
            echo "============================"
            echo
            composer install
            echo
            echo "============================"
            echo "[ Generation du .env.local.php ]"
            echo "============================"
            echo
            composer dump-env prod
            php bin/console cache:clear
            echo
            echo "============================"
            echo "[ mise a jour des packages ]"
            echo "============================"
            echo
            composer install --no-dev --optimize-autoloader -n
            php bin/console cache:clear
            echo
            echo "============================"
            echo "[ mise a jour de la BBD ]"
            echo "============================"
            echo
            php bin/console d:d:d -f --if-exists
            php bin/console d:d:c
            php bin/console d:m:m -n
            




      - name: G√©n√©rer une entr√© dans CHANGELOG.md
        run: |
          chmod +x .github/workflows/script/generate_changelog.sh
          .github/workflows/script/generate_changelog.sh
  
      - name: Commit & push le nouveau CHANGELOG.md
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -f CHANGELOG.md

          if git diff --cached --quiet; then
            echo "üîπ Aucun changement √† committer."
            exit 0
          fi

          git commit -m "üîÑ Mise √† jour automatique du CHANGELOG"
          git push https://x-access-token:${{ secrets.PAT_PUSH }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}

      # - name: Envoyer un email avec le lien de test
      #   if: success()
      #   uses: matthewnitschke/send-email@v1
      #   with:
      #     smtp-server: ${{ secrets.SMTP_SERVER }}
      #     smtp-port: ${{ secrets.SMTP_PORT }}
      #     smtp-username: ${{ secrets.SMTP_USERNAME }}
      #     smtp-password: ${{ secrets.SMTP_PASSWORD }}
      #     subject: "‚úÖ D√©ploiement r√©ussi ‚Äì Version de test"
      #     to: ${{ secrets.EMAIL_TO }}
      #     from: ${{ secrets.SMTP_USERNAME }}
      #     body: "La version de test est en ligne : http://test-${{ steps.hash.outputs.hash }}.${{ secrets.APP_DOMAIN }}"

      # - name: Envoyer un email d‚Äô√©chec (optionnel)
      #   if: failure()
      #   run: |
      #     echo "Le d√©ploiement a √©chou√©." | mail -s "‚ùå √âchec du d√©ploiement" ${{ secrets.EMAIL_TO }}




